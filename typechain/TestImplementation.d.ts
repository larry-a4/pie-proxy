/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription
} from ".";

interface TestImplementationInterface extends Interface {
  functions: {
    getValue: TypedFunctionDescription<{ encode([]: []): string }>;

    getValue1: TypedFunctionDescription<{ encode([]: []): string }>;

    setValue: TypedFunctionDescription<{ encode([_value]: [string]): string }>;

    setValue1: TypedFunctionDescription<{ encode([_value]: [string]): string }>;

    value: TypedFunctionDescription<{ encode([]: []): string }>;

    value1: TypedFunctionDescription<{ encode([]: []): string }>;
  };

  events: {};
}

export class TestImplementation extends Contract {
  connect(signerOrProvider: Signer | Provider | string): TestImplementation;
  attach(addressOrName: string): TestImplementation;
  deployed(): Promise<TestImplementation>;

  on(event: EventFilter | string, listener: Listener): TestImplementation;
  once(event: EventFilter | string, listener: Listener): TestImplementation;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): TestImplementation;
  removeAllListeners(eventName: EventFilter | string): TestImplementation;
  removeListener(eventName: any, listener: Listener): TestImplementation;

  interface: TestImplementationInterface;

  functions: {
    getValue(): Promise<string>;

    getValue1(): Promise<string>;

    setValue(
      _value: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    setValue1(
      _value: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    value(): Promise<string>;

    value1(): Promise<string>;
  };

  getValue(): Promise<string>;

  getValue1(): Promise<string>;

  setValue(
    _value: string,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  setValue1(
    _value: string,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  value(): Promise<string>;

  value1(): Promise<string>;

  filters: {};

  estimate: {
    getValue(): Promise<BigNumber>;

    getValue1(): Promise<BigNumber>;

    setValue(_value: string): Promise<BigNumber>;

    setValue1(_value: string): Promise<BigNumber>;

    value(): Promise<BigNumber>;

    value1(): Promise<BigNumber>;
  };
}
