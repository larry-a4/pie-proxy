/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { PProxyOverridable } from "./PProxyOverridable";

export class PProxyOverridableFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(): Promise<PProxyOverridable> {
    return super.deploy() as Promise<PProxyOverridable>;
  }
  getDeployTransaction(): UnsignedTransaction {
    return super.getDeployTransaction();
  }
  attach(address: string): PProxyOverridable {
    return super.attach(address) as PProxyOverridable;
  }
  connect(signer: Signer): PProxyOverridableFactory {
    return super.connect(signer) as PProxyOverridableFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PProxyOverridable {
    return new Contract(address, _abi, signerOrProvider) as PProxyOverridable;
  }
}

const _abi = [
  {
    stateMutability: "payable",
    type: "fallback"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_value",
        type: "address"
      }
    ],
    name: "addressToBytes32",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_value",
        type: "bytes32"
      }
    ],
    name: "bytes32ToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [],
    name: "getImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "getOverrides",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "getProxyOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32"
      }
    ],
    name: "readAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32"
      }
    ],
    name: "readBool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newImplementation",
        type: "address"
      }
    ],
    name: "setImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOverrides",
        type: "address"
      }
    ],
    name: "setOverrides",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address"
      }
    ],
    name: "setProxyOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32"
      }
    ],
    name: "storageRead",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];

const _bytecode =
  "0x608060405261005a60405160200180807f4f574e45525f534c4f5400000000000000000000000000000000000000000000815250600a019050604051602081830303815290604052805190602001203361005f60201b60201c565b6100b1565b61007d826100728361008160201b60201c565b6100a460201b60201c565b5050565b60008173ffffffffffffffffffffffffffffffffffffffff1660001b9050919050565b6000829050818155505050565b610bfe806100c06000396000f3fe6080604052600436106100a05760003560e01c80639d84ae69116100645780639d84ae6914610282578063aaf10f42146102fd578063bb15ac8e14610354578063c1f14bfe146103a7578063caaee91c146103fe578063d784d4261461044f576100a1565b80631ab7710d146100ab5780631f3681251461010257806337a440e6146101535780635ced058e146101a257806382c947b71461021d576100a1565b5b6100a96104a0565b005b3480156100b757600080fd5b506100c061061d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561010e57600080fd5b506101516004803603602081101561012557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610673565b005b34801561015f57600080fd5b5061018c6004803603602081101561017657600080fd5b8101908080359060200190929190505050610798565b6040518082815260200191505060405180910390f35b3480156101ae57600080fd5b506101db600480360360208110156101c557600080fd5b81019080803590602001909291905050506107a8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561022957600080fd5b5061026c6004803603602081101561024057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107b5565b6040518082815260200191505060405180910390f35b34801561028e57600080fd5b506102bb600480360360208110156102a557600080fd5b81019080803590602001909291905050506107d8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561030957600080fd5b506103126107f2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561036057600080fd5b5061038d6004803603602081101561037757600080fd5b8101908080359060200190929190505050610848565b604051808215151515815260200191505060405180910390f35b3480156103b357600080fd5b506103bc610860565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561040a57600080fd5b5061044d6004803603602081101561042157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108b6565b005b34801561045b57600080fd5b5061049e6004803603602081101561047257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109db565b005b60006104f160405160200180807f4f56455252494445535f534c4f54000000000000000000000000000000000000815250600e019050604051602081830303815290604052805190602001206107d8565b90508073ffffffffffffffffffffffffffffffffffffffff16633be6167e6000357fffffffff00000000000000000000000000000000000000000000000000000000166040518263ffffffff1660e01b815260040180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060206040518083038186803b1580156105a657600080fd5b505afa1580156105ba573d6000803e3d6000fd5b505050506040513d60208110156105d057600080fd5b81019080805190602001909291905050501561061257600081905060405136600082376000803683855af43d806000843e816000811461060e578184f35b8184fd5b61061a610b00565b50565b600061066e60405160200180807f4f574e45525f534c4f5400000000000000000000000000000000000000000000815250600a019050604051602081830303815290604052805190602001206107d8565b905090565b6106c260405160200180807f4f574e45525f534c4f5400000000000000000000000000000000000000000000815250600a019050604051602081830303815290604052805190602001206107d8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610745576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180610b9e602b913960400191505060405180910390fd5b61079560405160200180807f4f56455252494445535f534c4f54000000000000000000000000000000000000815250600e0190506040516020818303038152906040528051906020012082610b7a565b50565b6000808254905080915050919050565b60008160001c9050919050565b60008173ffffffffffffffffffffffffffffffffffffffff1660001b9050919050565b60006107eb6107e683610798565b6107a8565b9050919050565b600061084360405160200180807f494d504c454d454e544154494f4e5f534c4f54000000000000000000000000008152506013019050604051602081830303815290604052805190602001206107d8565b905090565b6000600160001b61085883610798565b149050919050565b60006108b160405160200180807f4f56455252494445535f534c4f54000000000000000000000000000000000000815250600e019050604051602081830303815290604052805190602001206107d8565b905090565b61090560405160200180807f4f574e45525f534c4f5400000000000000000000000000000000000000000000815250600a019050604051602081830303815290604052805190602001206107d8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610988576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180610b9e602b913960400191505060405180910390fd5b6109d860405160200180807f4f574e45525f534c4f5400000000000000000000000000000000000000000000815250600a0190506040516020818303038152906040528051906020012082610b7a565b50565b610a2a60405160200180807f4f574e45525f534c4f5400000000000000000000000000000000000000000000815250600a019050604051602081830303815290604052805190602001206107d8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610aad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180610b9e602b913960400191505060405180910390fd5b610afd60405160200180807f494d504c454d454e544154494f4e5f534c4f540000000000000000000000000081525060130190506040516020818303038152906040528051906020012082610b7a565b50565b6000610b5160405160200180807f494d504c454d454e544154494f4e5f534c4f54000000000000000000000000008152506013019050604051602081830303815290604052805190602001206107d8565b905060405136600082376000803683855af43d806000843e8160008114610b76578184f35b8184fd5b610b8c82610b87836107b5565b610b90565b5050565b600082905081815550505056fe5050726f78792e6f6e6c7950726f78794f776e65723a206d73672073656e646572206e6f74206f776e6572a264697066735822122000cc96fea87d4d7467cb9b717c2d9da5a8df1aad638afaac2984138c254e249d64736f6c63430006020033";
